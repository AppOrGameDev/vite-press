import{_ as s,o as n,c as e,U as a}from"./chunks/framework.c0c21d38.js";const C=JSON.parse('{"title":"vue-pure-admin 开发笔记","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/vue/vue-pure-admin开发笔记.md","filePath":"frontend/vue/vue-pure-admin开发笔记.md","lastUpdated":1721981240000}'),l={name:"frontend/vue/vue-pure-admin开发笔记.md"},p=a(`<h1 id="vue-pure-admin-开发笔记" tabindex="-1">vue-pure-admin 开发笔记 <a class="header-anchor" href="#vue-pure-admin-开发笔记" aria-label="Permalink to &quot;vue-pure-admin 开发笔记&quot;">​</a></h1><h2 id="官方资料" tabindex="-1">官方资料 <a class="header-anchor" href="#官方资料" aria-label="Permalink to &quot;官方资料&quot;">​</a></h2><ul><li><p>官方仓库<code>git clone git@github.com:pure-admin/vue-pure-admin.git -b main</code></p></li><li><p><a href="https://pure-admin.github.io/pure-admin-doc" target="_blank" rel="noreferrer">官方文档-推荐看这个</a></p><ul><li>文档仓库<code>git clone git@github.com:pure-admin/pure-admin-doc.git</code>;本地部署访问会快些</li></ul></li><li><p><a href="https://pure-admin-utils.netlify.app/" target="_blank" rel="noreferrer">官方文档-@pureadmin/utils</a></p><ul><li>文档仓库<code>git clone git@github.com:pure-admin/pure-admin-utils-docs.git</code>;本地部署访问会快些</li></ul></li></ul><h2 id="笔记" tabindex="-1">笔记 <a class="header-anchor" href="#笔记" aria-label="Permalink to &quot;笔记&quot;">​</a></h2><p><code>https://codeload.github.com/AppOrGameDev/pure-admin-doc/zip/refs/heads/master</code></p><h2 id="小技巧tips" tabindex="-1">小技巧Tips <a class="header-anchor" href="#小技巧tips" aria-label="Permalink to &quot;小技巧Tips&quot;">​</a></h2><ul><li><p><code>所有$开头的函数,都是给开发人员使用的</code></p></li><li><p><code>官方文档直接git clone报错时,可以采用开启迷雾通+download ZIP包的形式下载源代码</code></p></li><li><p><code>每个项目独立指定node版本;不依赖node环境变量配置</code></p><ul><li><p><code>nvm虽然可以切换Node版本;但不支持同时运行两个不同Node版本的项目</code></p></li><li><p><strong style="color:green;">推荐使用nvm-desktop;除了基本的切换Node版本能力,还有独特优势:同时运行不同Node版本项目;有现代化UI界面</strong></p><ul><li><a href="https://github.com/1111mp/nvm-desktop" target="_blank" rel="noreferrer">nvm-desktop GitHub</a></li><li><a href="https://github.com/1111mp/nvm-desktop/releases" target="_blank" rel="noreferrer">nvm-desktop 下载</a></li><li>使用方法 <ul><li>为nvm-desktop配置环境变量;对应的命令行工具保存目录<code>C:\\Users\\XUXIAO\\.nvmd\\bin\\</code><ul><li><code>NVMD_HOME C:\\Users\\XUXIAO\\.nvmd</code></li><li><code>Path添加 %NVMD_HOMNE%\\bin</code></li></ul></li><li>版本号后面跟<code>Iron</code>表示长期维护版本</li><li>在前端项目根目录下执行<code>nvmd use [node_version或别名] --project</code></li><li><strong style="color:red;">只能针对node和npm命令生效;对pnpm和yarn不生效.</strong></li></ul></li></ul></li><li><p><s><strong style="color:red;">fnm:极快性能以及简洁命令行体验</strong></s></p><ul><li><p><a href="https://www.oldestdream.com/2022/04/windows-install-nodejs-with-fnm/" target="_blank" rel="noreferrer">win安装fnm</a></p><ul><li><p>下载fnm-windows.zip <a href="https://github.com/Schniz/fnm/releases" target="_blank" rel="noreferrer">fnm Releases GitHub</a></p></li><li><p>添加环境变量<code>FNM_HOME F:\\fnm\\</code>;<code>Path 新增%FNM_HOME%</code>;测试fnm是否生效<code>fnm -V</code></p></li><li><p><code>git bash</code>中使用<code>fnm</code></p><ul><li><p>进入用户目录;资源管理器输入<code>%USERPROFILE%</code>;回车</p></li><li><p>新建<code>.bash_profile</code>文件;输入以下代码保存</p></li><li><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">eval</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">$(</span><span style="color:#FFCB6B;">fnm</span><span style="color:#C3E88D;"> env </span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;"> </span><span style="color:#FFCB6B;">sed</span><span style="color:#C3E88D;"> </span><span style="color:#F78C6C;">1</span><span style="color:#C3E88D;">d</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#C792EA;">export</span><span style="color:#A6ACCD;"> PATH</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">$(</span><span style="color:#FFCB6B;">cygpath</span><span style="color:#C3E88D;"> </span><span style="color:#A6ACCD;">$FNM_MULTISHELL_PATH</span><span style="color:#89DDFF;">)</span><span style="color:#C3E88D;">:</span><span style="color:#A6ACCD;">$PATH</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[[</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-f</span><span style="color:#A6ACCD;"> .node-version </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-f</span><span style="color:#A6ACCD;"> .nvmrc </span><span style="color:#89DDFF;">]];</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">then</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">fnm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">use</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">fi</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li><li><p><strong style="color:red;">重启系统才能生效;</strong>git bash中输入<code>fnm -V</code>测试是否生效</p></li></ul></li><li><p>设置fnm环境变量;查看命令<code>fnm env</code></p><ul><li><p>原始<code>env</code>配置如下</p><ul><li><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C3E88D;">export PATH=&quot;/c/Users/[用户名]/AppData/Local/fnm_multishells/20120_1721977603568&quot;:&quot;$PATH&quot;</span></span>
<span class="line"><span style="color:#C3E88D;">export FNM_RESOLVE_ENGINES=&quot;false&quot;</span></span>
<span class="line"><span style="color:#C3E88D;">export FNM_DIR=&quot;C:\\\\Users\\\\[用户名]\\\\AppData\\\\Roaming\\\\fnm&quot;</span></span>
<span class="line"><span style="color:#C3E88D;">export FNM_NODE_DIST_MIRROR=&quot;https://nodejs.org/dist&quot;</span></span>
<span class="line"><span style="color:#C3E88D;">export FNM_COREPACK_ENABLED=&quot;false&quot;</span></span>
<span class="line"><span style="color:#C3E88D;">export FNM_ARCH=&quot;x64&quot;</span></span>
<span class="line"><span style="color:#C3E88D;">export FNM_VERSION_FILE_STRATEGY=&quot;local&quot;</span></span>
<span class="line"><span style="color:#C3E88D;">export FNM_MULTISHELL_PATH=&quot;C:\\\\Users\\\\[用户名]\\\\AppData\\\\Local\\\\fnm_multishells\\\\20120_1721977603568&quot;</span></span>
<span class="line"><span style="color:#C3E88D;">export FNM_LOGLEVEL=&quot;info&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li><li><p>修改<code>fnm env</code>的环境变量配置;<code>fnm env --[配置项;不要前面的fnm_;要中横线] [要设置的值]</code></p><ul><li><strong style="color:green;">如何找到这个命令;使用<code>fnm -h</code>查看有哪些命令行选项;找到<code>fnm env -h</code>;再看选项就确定了下面这个修改配置的命令</strong></li></ul></li><li><p><code>fnm env --node-dist-mirror https://npmmirror.com/mirrors/node</code></p></li><li><p><strong style="color:red;">通过<code>fnm env -h</code>其实fnm不支持修改配置项;除了镜像源可修改,而且还是临时修改;由于都是保存在C盘,不满足我对windows将软件放到其他盘的硬性要求;所以就放弃fnm了</strong></p></li><li><p><code>fnm env</code>配置错了;恢复办法</p><ul><li>删除<code>C:\\Users\\[用户名]\\AppData\\Local\\</code>目录下fnm开头的文件夹</li><li>删除<code>C:\\Users\\[用户名]\\AppData\\Roaming\\</code>目录下fnm开头的文件夹</li></ul></li><li><p><code>fnm env --dir &quot;/f/fnm/fnm&quot;</code></p></li><li><p><code>fnm env --multishell-path F:\\\\fnm\\\\fnm_multishells\\\\20120_1721977603568</code></p></li><li><p><code>fnm env --path &quot;F:\\\\fnm\\\\fnm_multishells\\\\20120_1721977603568&quot;:&quot;$PATH&quot;</code></p></li><li><div class="language-txt line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Print and set up required environment variables for fnm</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">Usage: fnm env [OPTIONS]</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">Options:</span></span>
<span class="line"><span style="color:#A6ACCD;">      --node-dist-mirror &lt;NODE_DIST_MIRROR&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">          &lt;https://nodejs.org/dist/&gt; mirror [env: FNM_NODE_DIST_MIRROR] [default: https://nodejs.org/dist]</span></span>
<span class="line"><span style="color:#A6ACCD;">      --shell &lt;SHELL&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">          The shell syntax to use. Infers when missing [possible values: bash, zsh, fish, power-shell, cmd]</span></span>
<span class="line"><span style="color:#A6ACCD;">      --fnm-dir &lt;BASE_DIR&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">          The root directory of fnm installations [env: FNM_DIR]</span></span>
<span class="line"><span style="color:#A6ACCD;">      --json</span></span>
<span class="line"><span style="color:#A6ACCD;">          Print JSON instead of shell commands</span></span>
<span class="line"><span style="color:#A6ACCD;">      --log-level &lt;LOG_LEVEL&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">          The log level of fnm commands [env: FNM_LOGLEVEL] [default: info] [possible values: quiet, error, info]</span></span>
<span class="line"><span style="color:#A6ACCD;">      --use-on-cd</span></span>
<span class="line"><span style="color:#A6ACCD;">          Print the script to change Node versions every directory change</span></span>
<span class="line"><span style="color:#A6ACCD;">      --arch &lt;ARCH&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">          Override the architecture of the installed Node binary. Defaults to arch of fnm binary [env: FNM_ARCH]</span></span>
<span class="line"><span style="color:#A6ACCD;">      --version-file-strategy &lt;VERSION_FILE_STRATEGY&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">          A strategy for how to resolve the Node version. Used whenever \`fnm use\` or \`fnm install\` is called without a version, or when \`--use-on-cd\` is configured on evaluation [env: FNM_VERSION_FILE_STRATEGY] [default: local] [possible values: local, recursive]</span></span>
<span class="line"><span style="color:#A6ACCD;">      --corepack-enabled</span></span>
<span class="line"><span style="color:#A6ACCD;">          Enable corepack support for each new installation. This will make fnm call \`corepack enable\` on every Node.js installation. For more information about corepack see &lt;https://nodejs.org/api/corepack.html&gt; [env: FNM_COREPACK_ENABLED]</span></span>
<span class="line"><span style="color:#A6ACCD;">      --resolve-engines</span></span>
<span class="line"><span style="color:#A6ACCD;">          Resolve \`engines.node\` field in \`package.json\` whenever a \`.node-version\` or \`.nvmrc\` file is not present.</span></span>
<span class="line"><span style="color:#A6ACCD;">          Experimental: This feature is subject to change.</span></span>
<span class="line"><span style="color:#A6ACCD;">          Note: \`engines.node\` can be any semver range, with the latest satisfying version being resolved. [env: FNM_RESOLVE_ENGINES]</span></span>
<span class="line"><span style="color:#A6ACCD;">  -h, --help</span></span>
<span class="line"><span style="color:#A6ACCD;">          Print help (see more with &#39;--help&#39;)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div></li><li></li></ul></li><li><p>node保存路径</p></li></ul></li></ul></li></ul></li><li><p><code>WebStorm可以独立为项目指定运行环境;类似IDEA指定JDK版本一样</code></p></li></ul></li></ul>`,7),o=[p];function r(i,t,c,d,u,m){return n(),e("div",null,o)}const h=s(l,[["render",r]]);export{C as __pageData,h as default};
